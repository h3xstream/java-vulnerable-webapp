{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "extensions": [
          {
            "version": "4.3.0",
            "name": "edu.umd.cs.findbugs.plugins.core",
            "shortDescription": {
              "text": "Core SpotBugs plugin"
            },
            "informationUri": "https://github.com/spotbugs",
            "organization": "SpotBugs project"
          },
          {
            "version": "",
            "name": "com.h3xstream.findsecbugs",
            "shortDescription": {
              "text": "Find Security Bugs"
            },
            "informationUri": "https://find-sec-bugs.github.io",
            "organization": "Find Security Bugs"
          }
        ],
        "driver": {
          "name": "SpotBugs",
          "version": "4.3.0",
          "language": "en",
            "informationUri": "https://github.com/spotbugs",
          "rules": [
            {
              "id": "PATH_TRAVERSAL_IN",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {
                "default": {
                  "text": " reads a file whose location might be specified by user input."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "JAXRS_ENDPOINT",
              "shortDescription": {
                "text": "Found JAX-RS REST endpoint."
              },
              "messageStrings": {
                "default": {
                  "text": ". is a REST Web Service endpoint."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#JAXRS_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_CONTENT_TYPE",
              "shortDescription": {
                "text": "Untrusted Content-Type header."
              },
              "messageStrings": {
                "default": {
                  "text": "The HTTP header Content-Type can be controlled by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_CONTENT_TYPE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_HEADER",
              "shortDescription": {
                "text": "HTTP headers untrusted."
              },
              "messageStrings": {
                "default": {
                  "text": "Request header can easily be altered by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_HEADER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_HEADER_REFERER",
              "shortDescription": {
                "text": "Untrusted Referer header."
              },
              "messageStrings": {
                "default": {
                  "text": "The header \"Referer\" can easily be spoofed by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_HEADER_REFERER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_HEADER_USER_AGENT",
              "shortDescription": {
                "text": "Untrusted User-Agent header."
              },
              "messageStrings": {
                "default": {
                  "text": "The header \"User-Agent\" can easily be spoofed by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_HEADER_USER_AGENT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_PARAMETER",
              "shortDescription": {
                "text": "Untrusted servlet parameter."
              },
              "messageStrings": {
                "default": {
                  "text": "The method  returns a String value that is controlled by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_PARAMETER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_QUERY_STRING",
              "shortDescription": {
                "text": "Untrusted query string."
              },
              "messageStrings": {
                "default": {
                  "text": "The query string can be any value."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_QUERY_STRING",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_SERVER_NAME",
              "shortDescription": {
                "text": "Untrusted Hostname header."
              },
              "messageStrings": {
                "default": {
                  "text": "The hostname received can often be controlled by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_SERVER_NAME",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SERVLET_SESSION_ID",
              "shortDescription": {
                "text": "Untrusted session cookie value."
              },
              "messageStrings": {
                "default": {
                  "text": "Direct access to Session ID should be avoided."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SERVLET_SESSION_ID",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER",
              "shortDescription": {
                "text": "Servlet reflected cross site scripting vulnerability."
              },
              "messageStrings": {
                "default": {
                  "text": "HTTP parameter written to Servlet output in ."
                }
              },
              "helpUri": "https://spotbugs.readthedocs.io/en/latest/bugDescriptions.html#XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XSS_SERVLET",
              "shortDescription": {
                "text": "Potential XSS in Servlet."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  could be vulnerable to XSS."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XSS_SERVLET",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "COMMAND_INJECTION",
              "shortDescription": {
                "text": "Potential Command Injection."
              },
              "messageStrings": {
                "default": {
                  "text": "This usage of  can be vulnerable to Command Injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#COMMAND_INJECTION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "COOKIE_USAGE",
              "shortDescription": {
                "text": "Potentially sensitive data in a cookie."
              },
              "messageStrings": {
                "default": {
                  "text": "Sensitive data may be stored by the application in a cookie."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#COOKIE_USAGE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "FILE_UPLOAD_FILENAME",
              "shortDescription": {
                "text": "Tainted filename read."
              },
              "messageStrings": {
                "default": {
                  "text": "The filename read can be tampered with by the client."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#FILE_UPLOAD_FILENAME",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "PREDICTABLE_RANDOM",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {
                "default": {
                  "text": "The use of  is predictable."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "PREDICTABLE_RANDOM_SCALA",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator (Scala)."
              },
              "messageStrings": {
                "default": {
                  "text": "The use of  is predictable."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM_SCALA",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "JAXWS_ENDPOINT",
              "shortDescription": {
                "text": "Found JAX-WS SOAP endpoint."
              },
              "messageStrings": {
                "default": {
                  "text": " is a SOAP Web Service endpoint."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#JAXWS_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "PATH_TRAVERSAL_OUT",
              "shortDescription": {
                "text": "Potential Path Traversal (file write)."
              },
              "messageStrings": {
                "default": {
                  "text": " writes to a file whose location might be specified by user input."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_OUT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "PERMISSIVE_CORS",
              "shortDescription": {
                "text": "Overly permissive CORS policy."
              },
              "messageStrings": {
                "default": {
                  "text": "The program defines an overly permissive Cross-Origin Resource Sharing (CORS) policy."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#PERMISSIVE_CORS",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "COOKIE_PERSISTENT",
              "shortDescription": {
                "text": "Persistent Cookie Usage."
              },
              "messageStrings": {
                "default": {
                  "text": "Cookie Set To Expire In 1 Year Or More."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#COOKIE_PERSISTENT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "HTTPONLY_COOKIE",
              "shortDescription": {
                "text": "Cookie without the HttpOnly flag."
              },
              "messageStrings": {
                "default": {
                  "text": "Cookie without the HttpOnly flag could be red by a malicious script in the browser."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "HTTP_RESPONSE_SPLITTING",
              "shortDescription": {
                "text": "Potential HTTP Response Splitting."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  might be used to include CRLF characters into HTTP headers."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#HTTP_RESPONSE_SPLITTING",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "INSECURE_COOKIE",
              "shortDescription": {
                "text": "Cookie without the secure flag."
              },
              "messageStrings": {
                "default": {
                  "text": "Cookie without the secure flag could be sent in clear text if a HTTP URL is visited."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SPRING_ENDPOINT",
              "shortDescription": {
                "text": "Found Spring endpoint."
              },
              "messageStrings": {
                "default": {
                  "text": " is a Spring endpoint (Controller)."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SPRING_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "UNVALIDATED_REDIRECT",
              "shortDescription": {
                "text": "Unvalidated Redirect."
              },
              "messageStrings": {
                "default": {
                  "text": "The following redirection could be used by an attacker to redirect users to a phishing website."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#UNVALIDATED_REDIRECT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "REDOS",
              "shortDescription": {
                "text": "Regex DOS (ReDOS)."
              },
              "messageStrings": {
                "default": {
                  "text": "The regular expression \"\" is vulnerable to a denial of service attack (ReDOS)."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#REDOS",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "WEAK_FILENAMEUTILS",
              "shortDescription": {
                "text": "FilenameUtils not filtering null bytes."
              },
              "messageStrings": {
                "default": {
                  "text": "FilenameUtils. doesn't filter null bytes."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#WEAK_FILENAMEUTILS",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "WICKET_ENDPOINT",
              "shortDescription": {
                "text": "Found Wicket WebPage."
              },
              "messageStrings": {
                "default": {
                  "text": " is a Wicket WebPage."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#WICKET_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "BAD_HEXA_CONVERSION",
              "shortDescription": {
                "text": "Bad hexadecimal concatenation."
              },
              "messageStrings": {
                "default": {
                  "text": "Leading zeros are omitted in the concatenation increasing collision potential."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#BAD_HEXA_CONVERSION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "WEAK_MESSAGE_DIGEST_SHA1",
              "shortDescription": {
                "text": "SHA-1 is a weak hash function."
              },
              "messageStrings": {
                "default": {
                  "text": " is not a recommended cryptographic hash function."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#WEAK_MESSAGE_DIGEST_SHA1",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "CIPHER_INTEGRITY",
              "shortDescription": {
                "text": "Cipher with no integrity."
              },
              "messageStrings": {
                "default": {
                  "text": "The cipher does not provide data integrity."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#CIPHER_INTEGRITY",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "DES_USAGE",
              "shortDescription": {
                "text": "DES is insecure."
              },
              "messageStrings": {
                "default": {
                  "text": "DES should be replaced with AES."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#DES_USAGE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "ECB_MODE",
              "shortDescription": {
                "text": "ECB mode is insecure."
              },
              "messageStrings": {
                "default": {
                  "text": "The cipher uses ECB mode, which provides poor confidentiality for encrypted data."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#ECB_MODE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "PADDING_ORACLE",
              "shortDescription": {
                "text": "Cipher is susceptible to Padding Oracle."
              },
              "messageStrings": {
                "default": {
                  "text": "The cipher is susceptible to padding oracle attacks."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#PADDING_ORACLE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "TDES_USAGE",
              "shortDescription": {
                "text": "DESede is insecure."
              },
              "messageStrings": {
                "default": {
                  "text": "DESede should be replaced with AES."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#TDES_USAGE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "CUSTOM_MESSAGE_DIGEST",
              "shortDescription": {
                "text": "Message digest is custom."
              },
              "messageStrings": {
                "default": {
                  "text": " is a custom cryptographic hash function implementation."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#CUSTOM_MESSAGE_DIGEST",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "ESAPI_ENCRYPTOR",
              "shortDescription": {
                "text": "Use of ESAPI Encryptor."
              },
              "messageStrings": {
                "default": {
                  "text": "The ESAPI encryptor API is used to encrypt data."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#ESAPI_ENCRYPTOR",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "HARD_CODE_PASSWORD",
              "shortDescription": {
                "text": "Hard Coded Password."
              },
              "messageStrings": {
                "default": {
                  "text": "Hard coded password found."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#HARD_CODE_PASSWORD",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "HAZELCAST_SYMMETRIC_ENCRYPTION",
              "shortDescription": {
                "text": "Hazelcast symmetric encryption."
              },
              "messageStrings": {
                "default": {
                  "text": "The network communication for Hazelcast are configured to use a symmetric cipher."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#HAZELCAST_SYMMETRIC_ENCRYPTION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "BLOWFISH_KEY_SIZE",
              "shortDescription": {
                "text": "Blowfish usage with short key."
              },
              "messageStrings": {
                "default": {
                  "text": "Blowfish usage with a short encryption key."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#BLOWFISH_KEY_SIZE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "RSA_KEY_SIZE",
              "shortDescription": {
                "text": "RSA usage with short key."
              },
              "messageStrings": {
                "default": {
                  "text": "RSA usage with a short key."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#RSA_KEY_SIZE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "HARD_CODE_KEY",
              "shortDescription": {
                "text": "Hard Coded Key."
              },
              "messageStrings": {
                "default": {
                  "text": "Hard coded cryptographic key found."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#HARD_CODE_KEY",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "NULL_CIPHER",
              "shortDescription": {
                "text": "NullCipher is insecure."
              },
              "messageStrings": {
                "default": {
                  "text": "The use of a NullCipher is typically not desirable."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#NULL_CIPHER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "STATIC_IV",
              "shortDescription": {
                "text": "Static IV."
              },
              "messageStrings": {
                "default": {
                  "text": "The initialization vector (IV) is not properly generated."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#STATIC_IV",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "RSA_NO_PADDING",
              "shortDescription": {
                "text": "RSA with no padding is insecure."
              },
              "messageStrings": {
                "default": {
                  "text": "Use of RSA cipher without proper padding."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#RSA_NO_PADDING",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "UNENCRYPTED_SOCKET",
              "shortDescription": {
                "text": "Unencrypted Socket."
              },
              "messageStrings": {
                "default": {
                  "text": "Unencrypted socket to  (instead of SSLSocket)."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#UNENCRYPTED_SOCKET",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "WEAK_MESSAGE_DIGEST_MD5",
              "shortDescription": {
                "text": "MD2, MD4 and MD5 are weak hash functions."
              },
              "messageStrings": {
                "default": {
                  "text": " is not a recommended cryptographic hash function."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#WEAK_MESSAGE_DIGEST_MD5",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "LDAP_INJECTION",
              "shortDescription": {
                "text": "Potential LDAP Injection."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  can be vulnerable to LDAP injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#LDAP_INJECTION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "TAPESTRY_ENDPOINT",
              "shortDescription": {
                "text": "Found Tapestry page."
              },
              "messageStrings": {
                "default": {
                  "text": " is a Tapestry page."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#TAPESTRY_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "DMI_CONSTANT_DB_PASSWORD",
              "shortDescription": {
                "text": "Hardcoded constant database password."
              },
              "messageStrings": {
                "default": {
                  "text": "Hardcoded constant database password in ."
                }
              },
              "helpUri": "https://spotbugs.readthedocs.io/en/latest/bugDescriptions.html#DMI_CONSTANT_DB_PASSWORD",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SCRIPT_ENGINE_INJECTION",
              "shortDescription": {
                "text": "Potential code injection when using Script Engine."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  can be vulnerable to code injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SCRIPT_ENGINE_INJECTION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SPEL_INJECTION",
              "shortDescription": {
                "text": "Potential code injection when using Spring Expression."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  could be vulnerable to code injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SPEL_INJECTION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SQL_INJECTION_HIBERNATE",
              "shortDescription": {
                "text": "Potential SQL/HQL Injection (Hibernate)."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  can be vulnerable to SQL/HQL injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION_HIBERNATE",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SQL_INJECTION_JDO",
              "shortDescription": {
                "text": "Potential SQL/JDOQL Injection (JDO)."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  can be vulnerable to SQL/JDOQL injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION_JDO",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "SQL_INJECTION_JPA",
              "shortDescription": {
                "text": "Potential SQL/JPQL Injection (JPA)."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  can be vulnerable to SQL/JPQL injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION_JPA",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "CRLF_INJECTION_LOGS",
              "shortDescription": {
                "text": "Potential CRLF Injection for logs."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  might be used to include CRLF characters into log messages."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#CRLF_INJECTION_LOGS",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "STRUTS_FORM_VALIDATION",
              "shortDescription": {
                "text": "Struts Form without input validation."
              },
              "messageStrings": {
                "default": {
                  "text": "Struts Form with no input validation."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#STRUTS_FORM_VALIDATION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "STRUTS1_ENDPOINT",
              "shortDescription": {
                "text": "Found Struts 1 endpoint."
              },
              "messageStrings": {
                "default": {
                  "text": " is a Struts 1 endpoint (Action)."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#STRUTS1_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "STRUTS2_ENDPOINT",
              "shortDescription": {
                "text": "Found Struts 2 endpoint."
              },
              "messageStrings": {
                "default": {
                  "text": " is a Struts 2 endpoint."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#STRUTS2_ENDPOINT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "WEAK_TRUST_MANAGER",
              "shortDescription": {
                "text": "TrustManager that accept any certificates."
              },
              "messageStrings": {
                "default": {
                  "text": "TrustManager that accept any certificates makes communication vulnerable to a MITM attack."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#WEAK_TRUST_MANAGER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XML_DECODER",
              "shortDescription": {
                "text": "XMLDecoder usage."
              },
              "messageStrings": {
                "default": {
                  "text": "It is not safe to use an XMLDecoder to parse user supplied data."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XML_DECODER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XPATH_INJECTION",
              "shortDescription": {
                "text": "Potential XPath Injection."
              },
              "messageStrings": {
                "default": {
                  "text": "This use of  can be vulnerable to XPath Injection."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XPATH_INJECTION",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XXE_DOCUMENT",
              "shortDescription": {
                "text": "XML parsing vulnerable to XXE (DocumentBuilder)."
              },
              "messageStrings": {
                "default": {
                  "text": "The use of  is vulnerable to XML External Entity attacks."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XXE_DOCUMENT",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XSS_REQUEST_WRAPPER",
              "shortDescription": {
                "text": "XSSRequestWrapper is a weak XSS protection."
              },
              "messageStrings": {
                "default": {
                  "text": "XSSRequestWrapper is a weak XSS protection mechanism."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XSS_REQUEST_WRAPPER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XXE_SAXPARSER",
              "shortDescription": {
                "text": "XML parsing vulnerable to XXE (SAXParser)."
              },
              "messageStrings": {
                "default": {
                  "text": "The use of  is vulnerable to XML External Entity attacks."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XXE_SAXPARSER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            },
            {
              "id": "XXE_XMLREADER",
              "shortDescription": {
                "text": "XML parsing vulnerable to XXE (XMLReader)."
              },
              "messageStrings": {
                "default": {
                  "text": "The use of  is vulnerable to XML External Entity attacks."
                }
              },
              "helpUri": "http://find-sec-bugs.github.io/bugs.htm#XXE_XMLREADER",
              "properties": {
                "tags": [
                  "SECURITY"
                ]
              }
            }
          ]
        }
      },
      "invocations": [
        {
          "exitCode": 1,
          "exitSignalName": "ERROR,MISSING CLASS,BUGS FOUND",
          "executionSuccessful": false
        }
      ],
      "results": [
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/mywebapp/ImagePersistance.java"
                },
                "region": {
                  "startLine": 14
                }
              },
              "logicalLocations": [
                {
                  "name": "getImageByName(String)",
                  "kind": "function",
                  "fullyQualifiedName": "com.mywebapp.ImagePersistance.getImageByName(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "JAXRS_ENDPOINT",
          "ruleIndex": 1,
          "message": {
            "id": "default",
            "arguments": [
              "com.mywebapp.ResourceEndpoint",
              "com.mywebapp.ResourceEndpoint.getImage(String)"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/mywebapp/ResourceEndpoint.java"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "getImage(String)",
                  "kind": "function",
                  "fullyQualifiedName": "com.mywebapp.ResourceEndpoint.getImage(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "JAXRS_ENDPOINT",
          "ruleIndex": 1,
          "message": {
            "id": "default",
            "arguments": [
              "com.mywebapp.ResourceEndpoint",
              "com.mywebapp.ResourceEndpoint.getImageThumbnail(String)"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/mywebapp/ResourceEndpoint.java"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 38
                }
              },
              "logicalLocations": [
                {
                  "name": "getImageThumbnail(String)",
                  "kind": "function",
                  "fullyQualifiedName": "com.mywebapp.ResourceEndpoint.getImageThumbnail(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/mywebapp/ResourceEndpoint.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "getImage(String)",
                  "kind": "function",
                  "fullyQualifiedName": "com.mywebapp.ResourceEndpoint.getImage(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_CONTENT_TYPE",
          "ruleIndex": 2,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_HEADER",
          "ruleIndex": 3,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_HEADER_REFERER",
          "ruleIndex": 4,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_HEADER_USER_AGENT",
          "ruleIndex": 5,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameter"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 35
                }
              },
              "logicalLocations": [
                {
                  "name": "useParameters(HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.useParameters(HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameterValues"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "useParameters(HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.useParameters(HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameterMap"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "useParameters(HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.useParameters(HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameterNames"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 41
                }
              },
              "logicalLocations": [
                {
                  "name": "useParameters(HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.useParameters(HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_QUERY_STRING",
          "ruleIndex": 7,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_SERVER_NAME",
          "ruleIndex": 8,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_SERVER_NAME",
          "ruleIndex": 8,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_SESSION_ID",
          "ruleIndex": 9,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER",
          "ruleIndex": 10,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_SERVLET",
          "ruleIndex": 11,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/PrintWriter.print(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_SERVLET",
          "ruleIndex": 11,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/PrintWriter.print(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_SERVLET",
          "ruleIndex": 11,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/PrintWriter.print(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/BasicServlet.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.BasicServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COMMAND_INJECTION",
          "ruleIndex": 12,
          "message": {
            "id": "default",
            "arguments": [
              "java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CommandInjection.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CommandInjection.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COMMAND_INJECTION",
          "ruleIndex": 12,
          "message": {
            "id": "default",
            "arguments": [
              "java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CommandInjection.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CommandInjection.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COMMAND_INJECTION",
          "ruleIndex": 12,
          "message": {
            "id": "default",
            "arguments": [
              "java/lang/ProcessBuilder.command([Ljava/lang/String;)Ljava/lang/ProcessBuilder;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CommandInjection.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CommandInjection.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COMMAND_INJECTION",
          "ruleIndex": 12,
          "message": {
            "id": "default",
            "arguments": [
              "java/lang/ProcessBuilder.command(Ljava/util/List;)Ljava/lang/ProcessBuilder;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CommandInjection.java"
                },
                "region": {
                  "startLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CommandInjection.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COOKIE_USAGE",
          "ruleIndex": 13,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CookieUsage.java"
                },
                "region": {
                  "startLine": 15
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CookieUsage.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COOKIE_USAGE",
          "ruleIndex": 13,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CookieUsage.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CookieUsage.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COOKIE_USAGE",
          "ruleIndex": 13,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/CookieUsage.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.CookieUsage.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "FILE_UPLOAD_FILENAME",
          "ruleIndex": 14,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/FileUploadCommon.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "handleFile(HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.FileUploadCommon.handleFile(HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "FILE_UPLOAD_FILENAME",
          "ruleIndex": 14,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/FileUploadWicket.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "handleFile(HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.FileUploadWicket.handleFile(HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PREDICTABLE_RANDOM",
          "ruleIndex": 15,
          "message": {
            "id": "default",
            "arguments": [
              "java.lang.Math.random()"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/InsecureRandom.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "mathRandom()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.InsecureRandom.mathRandom()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PREDICTABLE_RANDOM",
          "ruleIndex": 15,
          "message": {
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/InsecureRandom.java"
                },
                "region": {
                  "startLine": 9
                }
              },
              "logicalLocations": [
                {
                  "name": "newRandomObj()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.InsecureRandom.newRandomObj()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PREDICTABLE_RANDOM_SCALA",
          "ruleIndex": 16,
          "message": {
            "id": "default",
            "arguments": [
              "scala.util.Random"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/InsecureRandom.java"
                },
                "region": {
                  "startLine": 30
                }
              },
              "logicalLocations": [
                {
                  "name": "scalaRandom()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.InsecureRandom.scalaRandom()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PREDICTABLE_RANDOM_SCALA",
          "ruleIndex": 16,
          "message": {
            "id": "default",
            "arguments": [
              "scala.util.Random"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/InsecureRandom.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "scalaRandom()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.InsecureRandom.scalaRandom()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "JAXRS_ENDPOINT",
          "ruleIndex": 1,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.JaxRsService",
              "testcode.JaxRsService.hello(String)"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/JaxRsService.java"
                },
                "region": {
                  "startLine": 14
                }
              },
              "logicalLocations": [
                {
                  "name": "hello(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.JaxRsService.hello(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "JAXWS_ENDPOINT",
          "ruleIndex": 17,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.JaxWsService",
              "testcode.JaxWsService.hello(String)"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/JaxWsService.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "hello(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.JaxWsService.hello(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "JAXWS_ENDPOINT",
          "ruleIndex": 17,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.JaxWsService",
              "testcode.JaxWsService.ping()"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/JaxWsService.java"
                },
                "region": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "ping()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.JaxWsService.ping()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 11
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/RandomAccessFile.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 13
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/FileReader.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 15
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/FileInputStream.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_OUT",
          "ruleIndex": 18,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/FileWriter.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_OUT",
          "ruleIndex": 18,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/FileWriter.<init>(Ljava/lang/String;Z)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_OUT",
          "ruleIndex": 18,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/FileOutputStream.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_OUT",
          "ruleIndex": 18,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/FileOutputStream.<init>(Ljava/lang/String;Z)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PathTraversal.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PathTraversal.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PERMISSIVE_CORS",
          "ruleIndex": 19,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PermissiveCORS.java"
                },
                "region": {
                  "startLine": 14
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PermissiveCORS.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_SERVLET",
          "ruleIndex": 11,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/PrintWriter.print(Ljava/lang/Object;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PermissiveCORS.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PermissiveCORS.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COOKIE_PERSISTENT",
          "ruleIndex": 20,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1DayUnitConfusion(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1DayUnitConfusion(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "COOKIE_PERSISTENT",
          "ruleIndex": 20,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 42
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Year(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Year(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 21,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 36
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1DayUnitConfusion(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1DayUnitConfusion(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 21,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Week(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Week(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTPONLY_COOKIE",
          "ruleIndex": 21,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 41
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Year(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Year(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTP_RESPONSE_SPLITTING",
          "ruleIndex": 22,
          "message": {
            "id": "default",
            "arguments": [
              "javax/servlet/http/Cookie.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 36
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1DayUnitConfusion(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1DayUnitConfusion(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTP_RESPONSE_SPLITTING",
          "ruleIndex": 22,
          "message": {
            "id": "default",
            "arguments": [
              "javax/servlet/http/Cookie.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Week(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Week(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTP_RESPONSE_SPLITTING",
          "ruleIndex": 22,
          "message": {
            "id": "default",
            "arguments": [
              "javax/servlet/http/Cookie.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 41
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Year(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Year(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "INSECURE_COOKIE",
          "ruleIndex": 23,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 36
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1DayUnitConfusion(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1DayUnitConfusion(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "INSECURE_COOKIE",
          "ruleIndex": 23,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Week(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Week(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "INSECURE_COOKIE",
          "ruleIndex": 23,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 41
                }
              },
              "logicalLocations": [
                {
                  "name": "setCookieFor1Year(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.setCookieFor1Year(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameter"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/PersistantCookie.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.PersistantCookie.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SPRING_ENDPOINT",
          "ruleIndex": 24,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.SpringTestController"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/SpringTestController.java"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "hello1(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.SpringTestController.hello1(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SPRING_ENDPOINT",
          "ruleIndex": 24,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.SpringTestController"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/SpringTestController.java"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "hello2()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.SpringTestController.hello2()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HTTP_RESPONSE_SPLITTING",
          "ruleIndex": 22,
          "message": {
            "id": "default",
            "arguments": [
              "javax/servlet/http/HttpServletResponse.addHeader(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/UnvalidatedRedirectServlet.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "unvalidatedRedirect2(HttpServletResponse, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.UnvalidatedRedirectServlet.unvalidatedRedirect2(HttpServletResponse, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameter"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/UnvalidatedRedirectServlet.java"
                },
                "region": {
                  "startLine": 13
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.UnvalidatedRedirectServlet.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "UNVALIDATED_REDIRECT",
          "ruleIndex": 25,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/UnvalidatedRedirectServlet.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "unvalidatedRedirect1(HttpServletResponse, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.UnvalidatedRedirectServlet.unvalidatedRedirect1(HttpServletResponse, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "UNVALIDATED_REDIRECT",
          "ruleIndex": 25,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/UnvalidatedRedirectServlet.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "unvalidatedRedirect2(HttpServletResponse, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.UnvalidatedRedirectServlet.unvalidatedRedirect2(HttpServletResponse, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "REDOS",
          "ruleIndex": 26,
          "message": {
            "id": "default",
            "arguments": [
              "((a)?)+"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/VariousRedos.java"
                },
                "region": {
                  "startLine": 8
                }
              },
              "logicalLocations": [
                {
                  "name": "new VariousRedos()",
                  "kind": "function",
                  "fullyQualifiedName": "new testcode.VariousRedos()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "REDOS",
          "ruleIndex": 26,
          "message": {
            "id": "default",
            "arguments": [
              "([a-zA-Z]+)*"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/VariousRedos.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.VariousRedos.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "REDOS",
          "ruleIndex": 26,
          "message": {
            "id": "default",
            "arguments": [
              ""
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/VariousRedos.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.VariousRedos.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PATH_TRAVERSAL_IN",
          "ruleIndex": 0,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 34
                }
              },
              "logicalLocations": [
                {
                  "name": "canonical(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.canonical(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "normalize"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "getExtension"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "getExtension"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "isExtension"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "isExtension"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "getName"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "getName"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "getBaseName"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_FILENAMEUTILS",
          "ruleIndex": 27,
          "message": {
            "id": "default",
            "arguments": [
              "getBaseName"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WeakFilenameUtils.java"
                },
                "region": {
                  "startLine": 30
                }
              },
              "logicalLocations": [
                {
                  "name": "testPath(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.WeakFilenameUtils.testPath(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WICKET_ENDPOINT",
          "ruleIndex": 28,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.WicketWebPage"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/WicketWebPage.java"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "WicketWebPage",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.WicketWebPage"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "BAD_HEXA_CONVERSION",
          "ruleIndex": 29,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BadHexa.java"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 42
                }
              },
              "logicalLocations": [
                {
                  "name": "badHash(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BadHexa.badHash(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA-1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BadHexa.java"
                },
                "region": {
                  "startLine": 34
                }
              },
              "logicalLocations": [
                {
                  "name": "badHash(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BadHexa.badHash(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA-1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BadHexa.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "goodHash(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BadHexa.goodHash(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 32
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "DES_USAGE",
          "ruleIndex": 32,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "DES_USAGE",
          "ruleIndex": 32,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "DES_USAGE",
          "ruleIndex": 32,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "DES_USAGE",
          "ruleIndex": 32,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ECB_MODE",
          "ruleIndex": 33,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ECB_MODE",
          "ruleIndex": 33,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ECB_MODE",
          "ruleIndex": 33,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ECB_MODE",
          "ruleIndex": 33,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ECB_MODE",
          "ruleIndex": 33,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ECB_MODE",
          "ruleIndex": 33,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "TDES_USAGE",
          "ruleIndex": 35,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "TDES_USAGE",
          "ruleIndex": 35,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "TDES_USAGE",
          "ruleIndex": 35,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "TDES_USAGE",
          "ruleIndex": 35,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/BlockCipherList.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.BlockCipherList.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CUSTOM_MESSAGE_DIGEST",
          "ruleIndex": 36,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.crypto.CustomMessageDigest"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/CustomMessageDigest.java"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "CustomMessageDigest",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.crypto.CustomMessageDigest"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ESAPI_ENCRYPTOR",
          "ruleIndex": 37,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/EsapiCrypto.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "decryptMethods(SecretKey)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.EsapiCrypto.decryptMethods(SecretKey)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ESAPI_ENCRYPTOR",
          "ruleIndex": 37,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/EsapiCrypto.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "decryptMethods(SecretKey)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.EsapiCrypto.decryptMethods(SecretKey)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ESAPI_ENCRYPTOR",
          "ruleIndex": 37,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/EsapiCrypto.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "decryptMethods(SecretKey)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.EsapiCrypto.decryptMethods(SecretKey)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ESAPI_ENCRYPTOR",
          "ruleIndex": 37,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/EsapiCrypto.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptMethods(SecretKey, PlainText)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.EsapiCrypto.encryptMethods(SecretKey, PlainText)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ESAPI_ENCRYPTOR",
          "ruleIndex": 37,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/EsapiCrypto.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptMethods(SecretKey, PlainText)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.EsapiCrypto.encryptMethods(SecretKey, PlainText)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "ESAPI_ENCRYPTOR",
          "ruleIndex": 37,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/EsapiCrypto.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptMethods(SecretKey, PlainText)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.EsapiCrypto.encryptMethods(SecretKey, PlainText)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/HazelcastSymmetric.java"
                },
                "region": {
                  "startLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "init()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.HazelcastSymmetric.init()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HAZELCAST_SYMMETRIC_ENCRYPTION",
          "ruleIndex": 39,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/HazelcastSymmetric.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "init()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.HazelcastSymmetric.init()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "BLOWFISH_KEY_SIZE",
          "ruleIndex": 40,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeBlowfish.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "weakKeySize1()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeBlowfish.weakKeySize1()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "BLOWFISH_KEY_SIZE",
          "ruleIndex": 40,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeBlowfish.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "weakKeySize2()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeBlowfish.weakKeySize2()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "RSA_KEY_SIZE",
          "ruleIndex": 41,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeRsa.java"
                },
                "region": {
                  "startLine": 14
                }
              },
              "logicalLocations": [
                {
                  "name": "weakKeySize1()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeRsa.weakKeySize1()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "RSA_KEY_SIZE",
          "ruleIndex": 41,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeRsa.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "weakKeySize2()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeRsa.weakKeySize2()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "RSA_KEY_SIZE",
          "ruleIndex": 41,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeRsa.java"
                },
                "region": {
                  "startLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "weakKeySize3ParameterSpec()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeRsa.weakKeySize3ParameterSpec()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "RSA_KEY_SIZE",
          "ruleIndex": 41,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeRsa.java"
                },
                "region": {
                  "startLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "weakKeySize4ParameterSpec()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeRsa.weakKeySize4ParameterSpec()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "RSA_KEY_SIZE",
          "ruleIndex": 41,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/InsufficientKeySizeRsa.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "logicalLocations": [
                {
                  "name": "okKeySize()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.InsufficientKeySizeRsa.okKeySize()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/NullCipherUse.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.NullCipherUse.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_KEY",
          "ruleIndex": 42,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/NullCipherUse.java"
                },
                "region": {
                  "startLine": 35
                }
              },
              "logicalLocations": [
                {
                  "name": "String.getBytes(String)",
                  "kind": "function",
                  "fullyQualifiedName": "String.getBytes(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "NULL_CIPHER",
          "ruleIndex": 43,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/NullCipherUse.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.NullCipherUse.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STATIC_IV",
          "ruleIndex": 44,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/NullCipherUse.java"
                },
                "region": {
                  "startLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptWithCipher(Cipher, byte[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.NullCipherUse.encryptWithCipher(Cipher, byte[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "RSA_NO_PADDING",
          "ruleIndex": 45,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/RsaNoPadding.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "rsaCipherWeak()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.RsaNoPadding.rsaCipherWeak()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "UNENCRYPTED_SOCKET",
          "ruleIndex": 46,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.crypto.UnencryptedSocket"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/UnencryptedSocket.java"
                },
                "region": {
                  "startLine": 28
                }
              },
              "logicalLocations": [
                {
                  "name": "otherConstructors()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.UnencryptedSocket.otherConstructors()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "UNENCRYPTED_SOCKET",
          "ruleIndex": 46,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.crypto.UnencryptedSocket"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/UnencryptedSocket.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "otherConstructors()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.UnencryptedSocket.otherConstructors()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "UNENCRYPTED_SOCKET",
          "ruleIndex": 46,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.crypto.UnencryptedSocket"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/UnencryptedSocket.java"
                },
                "region": {
                  "startLine": 34
                }
              },
              "logicalLocations": [
                {
                  "name": "otherConstructors()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.UnencryptedSocket.otherConstructors()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "UNENCRYPTED_SOCKET",
          "ruleIndex": 46,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.crypto.UnencryptedSocket"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/UnencryptedSocket.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "plainSocket()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.UnencryptedSocket.plainSocket()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD5"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD2"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 38
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD2"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 42
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD5"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 43
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD2"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD5"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD2"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 12
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_MD5",
          "ruleIndex": 47,
          "message": {
            "id": "default",
            "arguments": [
              "MD5"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 40
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 44
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 48
                }
              },
              "logicalLocations": [
                {
                  "name": "apacheApiVariations()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.apacheApiVariations()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_MESSAGE_DIGEST_SHA1",
          "ruleIndex": 30,
          "message": {
            "id": "default",
            "arguments": [
              "SHA1"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/WeakMessageDigest.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.WeakMessageDigest.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize1(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize1(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 44
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize2(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize2(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 63
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize3(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize3(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize1(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize1(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 44
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize2(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize2(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 63
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize3(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize3(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STATIC_IV",
          "ruleIndex": 44,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize1(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize1(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STATIC_IV",
          "ruleIndex": 44,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 36
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize2(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize2(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STATIC_IV",
          "ruleIndex": 44,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/ConstantIv.java"
                },
                "region": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "encryptIvNotInitialize3(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.ConstantIv.encryptIvNotInitialize3(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/SafeIvGeneration.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "encrypt(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.SafeIvGeneration.encrypt(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/SafeIvGeneration.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "encrypt(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.SafeIvGeneration.encrypt(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CIPHER_INTEGRITY",
          "ruleIndex": 31,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/StaticVariableIv.java"
                },
                "region": {
                  "startLine": 34
                }
              },
              "logicalLocations": [
                {
                  "name": "encrypt(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.StaticVariableIv.encrypt(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "PADDING_ORACLE",
          "ruleIndex": 34,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/StaticVariableIv.java"
                },
                "region": {
                  "startLine": 34
                }
              },
              "logicalLocations": [
                {
                  "name": "encrypt(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.StaticVariableIv.encrypt(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STATIC_IV",
          "ruleIndex": 44,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/crypto/iv/StaticVariableIv.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "encrypt(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.crypto.iv.StaticVariableIv.encrypt(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/googlemaps/GoogleMapsSigUtil.java"
                }
              },
              "logicalLocations": [
                {
                  "name": "GoogleMapsSigUtil.keyString",
                  "kind": "member",
                  "fullyQualifiedName": "testcode.googlemaps.GoogleMapsSigUtil.keyString"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/googlemaps/UrlSigner.java"
                }
              },
              "logicalLocations": [
                {
                  "name": "UrlSigner.keyString",
                  "kind": "member",
                  "fullyQualifiedName": "testcode.googlemaps.UrlSigner.keyString"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "LDAP_INJECTION",
          "ruleIndex": 48,
          "message": {
            "id": "default",
            "arguments": [
              "javax/naming/directory/InitialDirContext.search(Ljava/lang/String;Ljava/lang/String;Ljavax/naming/directory/SearchControls;)Ljavax/naming/NamingEnumeration;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/ldap/JndiLdap.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "logicalLocations": [
                {
                  "name": "dnFromUser(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.ldap.JndiLdap.dnFromUser(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "LDAP_INJECTION",
          "ruleIndex": 48,
          "message": {
            "id": "default",
            "arguments": [
              "com/unboundid/ldap/sdk/LDAPConnection.search(Ljava/lang/String;Lcom/unboundid/ldap/sdk/SearchScope;Ljava/lang/String;[Ljava/lang/String;)Lcom/unboundid/ldap/sdk/SearchResult;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/ldap/UnboundIdLdap.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "authenticate(String, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.ldap.UnboundIdLdap.authenticate(String, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "TAPESTRY_ENDPOINT",
          "ruleIndex": 49,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.pages.sub.TapestryPage"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/pages/sub/TapestryPage.java"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "TapestryPage",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.pages.sub.TapestryPage"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "DMI_CONSTANT_DB_PASSWORD",
          "ruleIndex": 50,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.password.JdbcDriverConnection.connectionWithHardCodePassword1()"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/password/JdbcDriverConnection.java"
                },
                "region": {
                  "startLine": 13
                }
              },
              "logicalLocations": [
                {
                  "name": "connectionWithHardCodePassword1()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.password.JdbcDriverConnection.connectionWithHardCodePassword1()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "DMI_CONSTANT_DB_PASSWORD",
          "ruleIndex": 50,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.password.JdbcDriverConnection.connectionWithHardCodePassword2()"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/password/JdbcDriverConnection.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "connectionWithHardCodePassword2()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.password.JdbcDriverConnection.connectionWithHardCodePassword2()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/password/JdbcDriverConnection.java"
                },
                "region": {
                  "startLine": 13
                }
              },
              "logicalLocations": [
                {
                  "name": "java.sql.DriverManager.getConnection(String, String, String)",
                  "kind": "function",
                  "fullyQualifiedName": "java.sql.DriverManager.getConnection(String, String, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/password/JdbcDriverConnection.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "java.sql.DriverManager.getConnection(String, String, String)",
                  "kind": "function",
                  "fullyQualifiedName": "java.sql.DriverManager.getConnection(String, String, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/password/JndiProperties.java"
                },
                "region": {
                  "startLine": 10
                }
              },
              "logicalLocations": [
                {
                  "name": "bug1()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.password.JndiProperties.bug1()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "HARD_CODE_PASSWORD",
          "ruleIndex": 38,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/password/JndiProperties.java"
                },
                "region": {
                  "startLine": 15
                }
              },
              "logicalLocations": [
                {
                  "name": "bug2()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.password.JndiProperties.bug2()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SCRIPT_ENGINE_INJECTION",
          "ruleIndex": 51,
          "message": {
            "id": "default",
            "arguments": [
              "javax/script/ScriptEngine.eval(Ljava/lang/String;)Ljava/lang/Object;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/script/ScriptEngineSample.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "scripting(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.script.ScriptEngineSample.scripting(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SPEL_INJECTION",
          "ruleIndex": 52,
          "message": {
            "id": "default",
            "arguments": [
              "org/springframework/expression/spel/standard/SpelExpressionParser.parseExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/script/SpelSample.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "parseSpelExpression(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.script.SpelSample.parseSpelExpression(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SPEL_INJECTION",
          "ruleIndex": 52,
          "message": {
            "id": "default",
            "arguments": [
              "org/springframework/expression/common/TemplateAwareExpressionParser.parseExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/script/SpelSample.java"
                },
                "region": {
                  "startLine": 63
                }
              },
              "logicalLocations": [
                {
                  "name": "parseTemplateAwareExpression(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.script.SpelSample.parseTemplateAwareExpression(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SPEL_INJECTION",
          "ruleIndex": 52,
          "message": {
            "id": "default",
            "arguments": [
              "org/springframework/expression/ExpressionParser.parseExpression(Ljava/lang/String;)Lorg/springframework/expression/Expression;"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/script/SpelSample.java"
                },
                "region": {
                  "startLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "parseExpressionInterface(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.script.SpelSample.parseExpressionInterface(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SERVLET_PARAMETER",
          "ruleIndex": 6,
          "message": {
            "id": "default",
            "arguments": [
              "getParameter"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/servlet/XssServlet1.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.servlet.XssServlet1.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER",
          "ruleIndex": 10,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.servlet.XssServlet1.doGet(HttpServletRequest, HttpServletResponse)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/servlet/XssServlet1.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "input1",
                  "kind": "variable",
                  "fullyQualifiedName": "testcode.servlet.XssServlet1.doGet(HttpServletRequest, HttpServletResponse)#input1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_SERVLET",
          "ruleIndex": 11,
          "message": {
            "id": "default",
            "arguments": [
              "java/io/PrintWriter.write(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/servlet/XssServlet1.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "doGet(HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.servlet.XssServlet1.doGet(HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_HIBERNATE",
          "ruleIndex": 53,
          "message": {
            "id": "default",
            "arguments": [
              "org/hibernate/criterion/Restrictions.sqlRestriction(Ljava/lang/String;)Lorg/hibernate/criterion/Criterion;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/HibernateSql.java"
                },
                "region": {
                  "startLine": 20
                }
              },
              "logicalLocations": [
                {
                  "name": "testQueries(SessionFactory, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.HibernateSql.testQueries(SessionFactory, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_HIBERNATE",
          "ruleIndex": 53,
          "message": {
            "id": "default",
            "arguments": [
              "org/hibernate/Session.createQuery(Ljava/lang/String;)Lorg/hibernate/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/HibernateSql.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "testQueries(SessionFactory, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.HibernateSql.testQueries(SessionFactory, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_HIBERNATE",
          "ruleIndex": 53,
          "message": {
            "id": "default",
            "arguments": [
              "org/hibernate/Session.createSQLQuery(Ljava/lang/String;)Lorg/hibernate/SQLQuery;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/HibernateSql.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "testQueries(SessionFactory, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.HibernateSql.testQueries(SessionFactory, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_HIBERNATE",
          "ruleIndex": 53,
          "message": {
            "id": "default",
            "arguments": [
              "org/hibernate/criterion/Restrictions.sqlRestriction(Ljava/lang/String;Ljava/lang/Object;Lorg/hibernate/type/Type;)Lorg/hibernate/criterion/Criterion;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/HibernateSql.java"
                },
                "region": {
                  "startLine": 28
                }
              },
              "logicalLocations": [
                {
                  "name": "testQueries(SessionFactory, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.HibernateSql.testQueries(SessionFactory, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_HIBERNATE",
          "ruleIndex": 53,
          "message": {
            "id": "default",
            "arguments": [
              "org/hibernate/criterion/Restrictions.sqlRestriction(Ljava/lang/String;[Ljava/lang/Object;[Lorg/hibernate/type/Type;)Lorg/hibernate/criterion/Criterion;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/HibernateSql.java"
                },
                "region": {
                  "startLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "testQueries(SessionFactory, String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.HibernateSql.testQueries(SessionFactory, String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/PersistenceManager.newQuery(Ljava/lang/String;)Ljavax/jdo/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSql.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoQueries(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSql.testJdoQueries(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/PersistenceManager.newQuery(Ljava/lang/String;Ljava/lang/Object;)Ljavax/jdo/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSql.java"
                },
                "region": {
                  "startLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoQueries(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSql.testJdoQueries(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/PersistenceManager.newQuery(Ljava/lang/Class;Ljava/util/Collection;Ljava/lang/String;)Ljavax/jdo/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSql.java"
                },
                "region": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoQueriesAdditionalMethodSig(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSql.testJdoQueriesAdditionalMethodSig(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/PersistenceManager.newQuery(Ljava/lang/Class;Ljava/lang/String;)Ljavax/jdo/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSql.java"
                },
                "region": {
                  "startLine": 43
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoQueriesAdditionalMethodSig(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSql.testJdoQueriesAdditionalMethodSig(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/PersistenceManager.newQuery(Ljavax/jdo/Extent;Ljava/lang/String;)Ljavax/jdo/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSql.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoQueriesAdditionalMethodSig(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSql.testJdoQueriesAdditionalMethodSig(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/Query.setFilter(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSqlFilter.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoUnsafeFilter(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSqlFilter.testJdoUnsafeFilter(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JDO",
          "ruleIndex": 54,
          "message": {
            "id": "default",
            "arguments": [
              "javax/jdo/Query.setGrouping(Ljava/lang/String;)V"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JdoSqlFilter.java"
                },
                "region": {
                  "startLine": 48
                }
              },
              "logicalLocations": [
                {
                  "name": "testJdoUnsafeGrouping(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JdoSqlFilter.testJdoUnsafeGrouping(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JPA",
          "ruleIndex": 55,
          "message": {
            "id": "default",
            "arguments": [
              "javax/persistence/EntityManager.createQuery(Ljava/lang/String;Ljava/lang/Class;)Ljavax/persistence/TypedQuery;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JpaSql.java"
                },
                "region": {
                  "startLine": 13
                }
              },
              "logicalLocations": [
                {
                  "name": "getUserByUsername(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JpaSql.getUserByUsername(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JPA",
          "ruleIndex": 55,
          "message": {
            "id": "default",
            "arguments": [
              "javax/persistence/EntityManager.createQuery(Ljava/lang/String;Ljava/lang/Class;)Ljavax/persistence/TypedQuery;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JpaSql.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "getUserByUsernameAlt2(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JpaSql.getUserByUsernameAlt2(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JPA",
          "ruleIndex": 55,
          "message": {
            "id": "default",
            "arguments": [
              "javax/persistence/EntityManager.createNativeQuery(Ljava/lang/String;)Ljavax/persistence/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JpaSql.java"
                },
                "region": {
                  "startLine": 48
                }
              },
              "logicalLocations": [
                {
                  "name": "getUserWithNativeQueryUnsafe(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JpaSql.getUserWithNativeQueryUnsafe(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JPA",
          "ruleIndex": 55,
          "message": {
            "id": "default",
            "arguments": [
              "javax/persistence/EntityManager.createNativeQuery(Ljava/lang/String;Ljava/lang/String;)Ljavax/persistence/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JpaSql.java"
                },
                "region": {
                  "startLine": 49
                }
              },
              "logicalLocations": [
                {
                  "name": "getUserWithNativeQueryUnsafe(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JpaSql.getUserWithNativeQueryUnsafe(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "SQL_INJECTION_JPA",
          "ruleIndex": 55,
          "message": {
            "id": "default",
            "arguments": [
              "javax/persistence/EntityManager.createNativeQuery(Ljava/lang/String;Ljava/lang/Class;)Ljavax/persistence/Query;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/sqli/JpaSql.java"
                },
                "region": {
                  "startLine": 50
                }
              },
              "logicalLocations": [
                {
                  "name": "getUserWithNativeQueryUnsafe(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.sqli.JpaSql.getUserWithNativeQueryUnsafe(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CRLF_INJECTION_LOGS",
          "ruleIndex": 56,
          "message": {
            "id": "default",
            "arguments": [
              "java/util/logging/Logger.severe(Ljava/lang/String;)V"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts1/FormWithValidation.java"
                },
                "region": {
                  "startLine": 49
                }
              },
              "logicalLocations": [
                {
                  "name": "validate(ActionMapping, HttpServletRequest)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.struts1.FormWithValidation.validate(ActionMapping, HttpServletRequest)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STRUTS_FORM_VALIDATION",
          "ruleIndex": 57,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts1/FormWithoutValidation1.java"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "FormWithoutValidation1",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.struts1.FormWithoutValidation1"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STRUTS_FORM_VALIDATION",
          "ruleIndex": 57,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts1/FormWithoutValidation2.java"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "FormWithoutValidation2",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.struts1.FormWithoutValidation2"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "CRLF_INJECTION_LOGS",
          "ruleIndex": 56,
          "message": {
            "id": "default",
            "arguments": [
              "java/util/logging/Logger.fine(Ljava/lang/String;)V"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts1/StrutsV1Action.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "execute(ActionMapping, ActionForm, HttpServletRequest, HttpServletResponse)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.struts1.StrutsV1Action.execute(ActionMapping, ActionForm, HttpServletRequest, HttpServletResponse)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STRUTS1_ENDPOINT",
          "ruleIndex": 58,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.struts1.StrutsV1Action"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts1/StrutsV1Action.java"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "StrutsV1Action",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.struts1.StrutsV1Action"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STRUTS_FORM_VALIDATION",
          "ruleIndex": 57,
          "message": {
            "id": "default"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts1/TestForm.java"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 24
                }
              },
              "logicalLocations": [
                {
                  "name": "TestForm",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.struts1.TestForm"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "STRUTS2_ENDPOINT",
          "ruleIndex": 59,
          "message": {
            "id": "default",
            "arguments": [
              "testcode.struts2.StrutsV2Endpoint"
            ]
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/struts2/StrutsV2Endpoint.java"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 36
                }
              },
              "logicalLocations": [
                {
                  "name": "StrutsV2Endpoint",
                  "kind": "type",
                  "fullyQualifiedName": "testcode.struts2.StrutsV2Endpoint"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_TRUST_MANAGER",
          "ruleIndex": 60,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/trustmanager/WeakTrustManager.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "checkClientTrusted(X509Certificate[], String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.trustmanager.WeakTrustManager$1.checkClientTrusted(X509Certificate[], String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_TRUST_MANAGER",
          "ruleIndex": 60,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/trustmanager/WeakTrustManager.java"
                },
                "region": {
                  "startLine": 25
                }
              },
              "logicalLocations": [
                {
                  "name": "checkServerTrusted(X509Certificate[], String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.trustmanager.WeakTrustManager$1.checkServerTrusted(X509Certificate[], String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_TRUST_MANAGER",
          "ruleIndex": 60,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/trustmanager/WeakTrustManager.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "logicalLocations": [
                {
                  "name": "getAcceptedIssuers()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.trustmanager.WeakTrustManager$1.getAcceptedIssuers()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_TRUST_MANAGER",
          "ruleIndex": 60,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/trustmanager/WeakTrustManager.java"
                },
                "region": {
                  "startLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "checkClientTrusted(X509Certificate[], String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.trustmanager.WeakTrustManager$TrustManagerInnerClass.checkClientTrusted(X509Certificate[], String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_TRUST_MANAGER",
          "ruleIndex": 60,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/trustmanager/WeakTrustManager.java"
                },
                "region": {
                  "startLine": 42
                }
              },
              "logicalLocations": [
                {
                  "name": "checkServerTrusted(X509Certificate[], String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.trustmanager.WeakTrustManager$TrustManagerInnerClass.checkServerTrusted(X509Certificate[], String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "WEAK_TRUST_MANAGER",
          "ruleIndex": 60,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/trustmanager/WeakTrustManager.java"
                },
                "region": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "getAcceptedIssuers()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.trustmanager.WeakTrustManager$TrustManagerInnerClass.getAcceptedIssuers()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XML_DECODER",
          "ruleIndex": 61,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xmldecoder/XmlDecodeUtil.java"
                },
                "region": {
                  "startLine": 9
                }
              },
              "logicalLocations": [
                {
                  "name": "handleXml(InputStream)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xmldecoder.XmlDecodeUtil.handleXml(InputStream)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XPATH_INJECTION",
          "ruleIndex": 62,
          "message": {
            "id": "default",
            "arguments": [
              "org/apache/xpath/XPathAPI.selectNodeIterator(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/traversal/NodeIterator;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xpath/XPathApacheXPathApi.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xpath.XPathApacheXPathApi.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XPATH_INJECTION",
          "ruleIndex": 62,
          "message": {
            "id": "default",
            "arguments": [
              "org/apache/xpath/XPathAPI.selectNodeList(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/NodeList;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xpath/XPathApacheXPathApi.java"
                },
                "region": {
                  "startLine": 23
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xpath.XPathApacheXPathApi.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XPATH_INJECTION",
          "ruleIndex": 62,
          "message": {
            "id": "default",
            "arguments": [
              "org/apache/xpath/XPathAPI.selectSingleNode(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/Node;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xpath/XPathApacheXPathApi.java"
                },
                "region": {
                  "startLine": 27
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xpath.XPathApacheXPathApi.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XPATH_INJECTION",
          "ruleIndex": 62,
          "message": {
            "id": "default",
            "arguments": [
              "javax/xml/xpath/XPath.compile(Ljava/lang/String;)Ljavax/xml/xpath/XPathExpression;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xpath/XPathJavax.java"
                },
                "region": {
                  "startLine": 21
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xpath.XPathJavax.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XPATH_INJECTION",
          "ruleIndex": 62,
          "message": {
            "id": "default",
            "arguments": [
              "javax/xml/xpath/XPath.evaluate(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xpath/XPathJavax.java"
                },
                "region": {
                  "startLine": 29
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xpath.XPathJavax.main(String[])"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xpath/XmlUtils.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "loadDoc(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xpath.XmlUtils.loadDoc(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_REQUEST_WRAPPER",
          "ruleIndex": 64,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xss/XSSRequestWrapper.java"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 83
                }
              },
              "logicalLocations": [
                {
                  "name": "stripXSS(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xss.XSSRequestWrapper.stripXSS(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XSS_REQUEST_WRAPPER",
          "ruleIndex": 64,
          "message": {
            "id": "default"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xss/XSSRequestWrapper2.java"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 96
                }
              },
              "logicalLocations": [
                {
                  "name": "stripXSS(String)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xss.XSSRequestWrapper2.stripXSS(String)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/DocumentBuilderSafeProperty.java"
                },
                "region": {
                  "startLine": 90
                }
              },
              "logicalLocations": [
                {
                  "name": "unsafeManualConfig1()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.DocumentBuilderSafeProperty.unsafeManualConfig1()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/DocumentBuilderSafeProperty.java"
                },
                "region": {
                  "startLine": 102
                }
              },
              "logicalLocations": [
                {
                  "name": "unsafeManualConfig2()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.DocumentBuilderSafeProperty.unsafeManualConfig2()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/DocumentBuilderSafeProperty.java"
                },
                "region": {
                  "startLine": 114
                }
              },
              "logicalLocations": [
                {
                  "name": "unsafeManualConfig3()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.DocumentBuilderSafeProperty.unsafeManualConfig3()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/DocumentBuilderSafeProperty.java"
                },
                "region": {
                  "startLine": 126
                }
              },
              "logicalLocations": [
                {
                  "name": "unsafeManualConfig4()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.DocumentBuilderSafeProperty.unsafeManualConfig4()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/DocumentBuilderSafeProperty.java"
                },
                "region": {
                  "startLine": 33
                }
              },
              "logicalLocations": [
                {
                  "name": "unsafeNoSpecialSettings()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.DocumentBuilderSafeProperty.unsafeNoSpecialSettings()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_DOCUMENT",
          "ruleIndex": 63,
          "message": {
            "id": "default",
            "arguments": [
              "DocumentBuilder.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/DocumentBuilderVulnerable.java"
                },
                "region": {
                  "startLine": 18
                }
              },
              "logicalLocations": [
                {
                  "name": "receiveXMLStream(InputStream)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.DocumentBuilderVulnerable.receiveXMLStream(InputStream)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_SAXPARSER",
          "ruleIndex": 65,
          "message": {
            "id": "default",
            "arguments": [
              "SAXParser.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/SaxParserSafeProperty.java"
                },
                "region": {
                  "startLine": 26
                }
              },
              "logicalLocations": [
                {
                  "name": "unsafeNoSpecialSettings()",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.SaxParserSafeProperty.unsafeNoSpecialSettings()"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_SAXPARSER",
          "ruleIndex": 65,
          "message": {
            "id": "default",
            "arguments": [
              "SAXParser.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/SaxParserVulnerable.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "receiveXMLStream(InputStream, DefaultHandler)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.SaxParserVulnerable.receiveXMLStream(InputStream, DefaultHandler)"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "XXE_XMLREADER",
          "ruleIndex": 66,
          "message": {
            "id": "default",
            "arguments": [
              "XMLReader.parse(...)"
            ]
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/testcode/xxe/XmlReaderVulnerable.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "logicalLocations": [
                {
                  "name": "receiveXMLStream(InputStream, DefaultHandler)",
                  "kind": "function",
                  "fullyQualifiedName": "testcode.xxe.XmlReaderVulnerable.receiveXMLStream(InputStream, DefaultHandler)"
                }
              ]
            }
          ]
        }
      ],
      "originalUriBaseIds": {}
    }
  ]
}
